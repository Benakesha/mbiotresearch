{"version":3,"sources":["axiosInterceptor.js","stores/actions/loginAction.js","stores/actions/actionTypes.js","components/loginComponent/loginComponent.js","components/navigationComponent/navigationComponent.js","components/footerComponent/footerComponent.js","components/dashboardComponent/dashboardComponent.js","components/reportComponent/reportComponent.js","components/adduserComponent/adduserComponent.js","App.js","serviceWorker.js","stores/updateObject.js","stores/reducers/loginReducer.js","index.js"],"names":["axiosInterceptor","axios","create","baseURL","defaults","headers","common","interceptors","request","use","error","response","loginSuccess","token","username","role","type","loginFailure","logout","localStorage","clear","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","loginAction","userdata","console","log","post","then","data","success","expirationDate","Date","getTime","expiresIn","setItem","message","catch","formValid","Layout","Header","Content","formErrors","rest","valid","Object","values","forEach","val","length","emailRegx","loginComponent","state","email","password","touched","formError","onInputChange","e","preventDefault","target","name","value","test","setState","onButtonClickHandler","loginSubmitHandler","userData","props","onAuth","this","isAuthenticated","onSetAuthRedirectPath","history","push","xs","span","offset","sm","md","className","onSubmit","Item","hasFeedback","validateStatus","help","placeholder","prefix","style","color","onChange","event","required","onClick","htmlType","block","backgroundColor","fontSize","marginLeft","Component","connect","auth","isError","isLoading","loading","authRedirectPath","action","navigationComponent","current","handleClick","key","onLogoutHandler","onLogout","visible","selectedKeys","mode","theme","overflowedIndicator","paddingLeft","fontWeight","disabled","withRouter","Footer","footerComponent","textAlign","Option","Select","formValid1","nameRegx","dashboardComponent","_isMounted","phoneNo","address","pincode","cname","cphone","trim","validator","isInt","onvisitorButtonClickHandler","selectChangeHandle","addvisitorSubmitHandler","escape","to","paddingBottom","TextArea","icon","faMapPin","defaultValue","width","showArrow","columns","title","dataIndex","reportComponent","selectedRows","tableData","onExportReport","get","responseType","res","saveAs","ghost","marginTop","rowKey","record","dataSource","pagination","bordered","passwordReg","adduserComponent","adduserSubmitHandler","info","App","onTryAutoSignUp","exact","component","getItem","Boolean","window","location","hostname","match","updateObject","oldObject","newObject","initialState","loginRequest","loginReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8059c8e2.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst axiosInterceptor = axios.create({\n  baseURL: \"http://localhost:3000/api/v1\"\n});\n\naxiosInterceptor.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n\naxiosInterceptor.interceptors.request.use(\n  request => {\n    return request;\n  },\n  error => {\n    return error;\n  }\n);\n\naxiosInterceptor.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    return error;\n  }\n);\n\nexport default axiosInterceptor;\n","import axios from \"../../axiosInterceptor\";\n// import axios from \"axios\";\n\nimport * as actionTypes from \"./actionTypes\";\n\nexport const loginRequest = () => {\n  return {\n    type: actionTypes.LOGIN_REQUEST\n  };\n};\nexport const loginSuccess = (token, username, role) => {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    token: token,\n    username: username,\n    role: role\n  };\n};\nexport const loginFailure = error => {\n  return {\n    type: actionTypes.LOGIN_FAILURE,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.clear();\n  return {\n    type: actionTypes.LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\n\nexport const loginAction = userdata => {\n  return dispatch => {\n    dispatch(loginRequest());\n    console.log(\"userdata----\", userdata);\n    axios\n      .post(\"/login\", userdata)\n      .then(response => {\n        console.log(\"response-----\", response);\n        if (response.data.success) {\n          const expirationDate = new Date(\n            new Date().getTime() + response.data.expiresIn * 1000\n          );\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"expirationDate\", expirationDate);\n          localStorage.setItem(\"username\", response.data.username);\n          localStorage.setItem(\"role\", response.data.role);\n          dispatch(\n            loginSuccess(\n              response.data.token,\n              response.data.username,\n              response.data.role\n            )\n          );\n          dispatch(checkAuthTimeout(response.data.expiresIn));\n        } else {\n          dispatch(loginFailure(response.data.message));\n        }\n      })\n      .catch(error => {\n        dispatch(loginFailure(error));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        const username = localStorage.getItem(\"username\");\n        const role = localStorage.getItem(\"role\");\n        dispatch(loginSuccess(token, username, role));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport { Layout, Row, Col, Input, Button, Icon, Form } from \"antd\";\nimport \"./loginComponent.css\";\nimport validator from \"validator\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport * as action from \"../../stores/actions/index\";\n\nconst { Header, Content } = Layout;\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\nconst emailRegx = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\nclass loginComponent extends Component {\n  state = {\n    email: null,\n    password: null,\n    touched: {\n      email: false,\n      password: false\n    },\n    formError: { email: \"\", password: \"\" }\n  };\n\n  componentDidMount() {\n    if (this.props.isAuthenticated) {\n      this.props.onSetAuthRedirectPath();\n    }\n  }\n  onInputChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = this.state.formError;\n\n    switch (name) {\n      case \"email\":\n        formErrors.email =\n          emailRegx.test(value) && value.length > 0 ? \"\" : \"Enter valid email\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 6 && value.length > 0\n            ? \"Min 6 character required\"\n            : \"\";\n\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => {\n      //console.log(this.state);\n    });\n  };\n\n  onButtonClickHandler = e => {\n    let { email, password, formError } = this.state;\n    if (email === null && password === null) {\n      formError.email = \"Email field required\";\n      formError.password = \"Password field required\";\n    }\n    this.setState({ formError });\n  };\n  loginSubmitHandler = e => {\n    e.preventDefault();\n    if (formValid(this.state)) {\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.onAuth(userData);\n    }\n  };\n\n  render() {\n    let { formError } = this.state;\n    let authRedirect = null;\n    if (this.props.isAuthenticated) {\n      // console.log(\"pro----\", this.props);\n      // authRedirect = <Redirect to={this.props.authRedirectPath} />;\n      this.props.history.push(\"/dashboard\");\n    }\n    return (\n      <Row>\n        {/* {authRedirect} */}\n        <Col\n          xs={{ span: 18, offset: 3 }}\n          sm={{ span: 12, offset: 7 }}\n          md={{ span: 10, offset: 7 }}\n          className=\"card\"\n        >\n          <form className=\"form\" onSubmit={this.loginSubmitHandler}>\n            <h3 className=\"h3\">Login to Site Executive </h3>\n            <Form.Item\n              className=\"formElement\"\n              hasFeedback\n              validateStatus={formError.email.length > 0 ? \"error\" : \"\"}\n              help={formError.email}\n            >\n              <Input\n                placeholder=\"email\"\n                name=\"email\"\n                prefix={\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                onChange={event => this.onInputChange(event)}\n              />\n            </Form.Item>\n            <Form.Item\n              className=\"formElement\"\n              hasFeedback\n              validateStatus={formError.password.length > 0 ? \"error\" : \"\"}\n              help={formError.password}\n            >\n              <Input\n                required\n                placeholder=\"password\"\n                name=\"password\"\n                prefix={\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                onChange={event => this.onInputChange(event)}\n              />\n            </Form.Item>\n            <Form.Item className=\"formElement\">\n              <Button\n                onClick={this.onButtonClickHandler}\n                htmlType=\"submit\"\n                block\n                style={{\n                  backgroundColor: \"#45526e\",\n                  color: \"#FFF\",\n                  fontSize: \"18px\"\n                }}\n              >\n                Login\n                <Icon type=\"login\" style={{ marginLeft: \"3%\" }} />\n              </Button>\n            </Form.Item>\n          </form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    isError: state.auth.error,\n    isLoading: state.auth.loading,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: userData => dispatch(action.loginAction(userData)),\n    onSetAuthRedirectPath: () =>\n      dispatch(action.setAuthRedirectPath(\"/dashboard\"))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(loginComponent);\n","import React, { Component } from \"react\";\nimport { Layout, Row, Col, Icon, Menu, Input, Select, Checkbox } from \"antd\";\nimport * as action from \"../../stores/actions/index\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Aux from \"../../hoc/Aux\";\n\nclass navigationComponent extends Component {\n  state = { current: \"dashboard\" };\n\n  handleClick = e => {\n    this.setState(\n      {\n        current: e.key\n      },\n      () => {\n        console.log(this.state.current);\n        this.props.history.push(`/${this.state.current}`);\n      }\n    );\n  };\n  onLogoutHandler = () => {\n    this.props.onLogout();\n  };\n\n  render() {\n    const { visible, ...rest } = this.state;\n    console.log(this.props);\n    return (\n      <Menu\n        onClick={this.handleClick}\n        selectedKeys={[this.state.current]}\n        mode=\"horizontal\"\n        theme=\"dark\"\n        style={{\n          backgroundColor: \"#45526e\",\n          color: \"#FFF\"\n        }}\n        overflowedIndicator={\n          <Icon\n            type=\"more\"\n            style={{\n              paddingLeft: \"200%\",\n              fontSize: \"20px\",\n              fontWeight: \"bolder\"\n            }}\n          />\n        }\n      >\n        <Menu.Item key=\"navBrand\" disabled>\n          MbioTech\n        </Menu.Item>\n        <Menu.Item key=\"dashboard\">\n          <Icon type=\"dashboard\" />\n          Dashboard\n        </Menu.Item>\n        {this.props.role === \"admin\" ? (\n          <Menu.Item key=\"report\">\n            <Icon type=\"file-excel\" />\n            Report\n          </Menu.Item>\n        ) : null}\n        {this.props.role === \"admin\" ? (\n          <Menu.Item key=\"adduser\">\n            <Icon type=\"file-excel\" />\n            Add user\n          </Menu.Item>\n        ) : null}\n        <Menu.Item key=\"logout\" onClick={this.onLogoutHandler}>\n          <Icon type=\"poweroff\" />\n          Logout\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    role: state.auth.role\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(action.logout())\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(navigationComponent));\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport { Layout } from \"antd\";\nconst { Footer } = Layout;\nclass footerComponent extends Component {\n  state = {};\n  render() {\n    return (\n      <Footer\n        style={{\n          backgroundColor: \"#001529\",\n          color: \"#FFF\",\n          textAlign: \"center\"\n        }}\n      >\n        <p>Copyright ©2019 All rights reserved Embiot Technologies </p>\n      </Footer>\n    );\n  }\n}\n\nexport default footerComponent;\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport {\n  Layout,\n  Row,\n  Col,\n  Input,\n  Button,\n  Icon,\n  Form,\n  Select,\n  message\n} from \"antd\";\nimport \"./dashboardComponent.css\";\nimport validator from \"validator\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport * as action from \"../../stores/actions/index\";\nimport NavigationComponent from \"../navigationComponent/navigationComponent\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAddressBook, faMapPin } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"../../axiosInterceptor\";\nimport FooterComponent from \"../footerComponent/footerComponent\";\nconst { Option } = Select;\nconst { Header, Content } = Layout;\n\nconst formValid1 = ({ formErrors, ...rest }) => {\n  let valid = true;\n  console.log(\"rr--\", formErrors);\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\nconst emailRegx = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\nconst nameRegx = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/g;\nclass dashboardComponent extends Component {\n  _isMounted = false;\n  state = {\n    username: null,\n    email: null,\n    phoneNo: null,\n    address: null,\n    pincode: null,\n    cname: null,\n    cphone: null,\n    role: \"select\",\n    formError: {\n      username: \"\",\n      email: \"\",\n      phoneNo: \"\",\n      address: \"\",\n      pincode: \"\",\n      role: \"\",\n      cname: \"\",\n      cphone: \"\"\n    }\n  };\n  componentDidMount() {\n    this._isMounted = true;\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  onInputChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = this.state.formError;\n\n    switch (name) {\n      case \"username\":\n        if (value.length > 0 && !nameRegx.test(value.trim())) {\n          formErrors.username = \"Please enter valid username\";\n        } else if (value.length < 3 && value.length > 0) {\n          formErrors.username = \"Min 3 character required\";\n        }\n        // } else if (value.length > 0 && !nameRegx.test(value.trim())) {\n        //   formErrors.username = \"Not valid name\";\n        // }\n        else {\n          formErrors.username = \"\";\n        }\n\n        break;\n      case \"email\":\n        formErrors.email =\n          emailRegx.test(value) && value.length > 0 ? \"\" : \"Enter valid email\";\n        break;\n      case \"phoneNo\":\n        if (value.length < 10 && value.length > 0) {\n          formErrors.phoneNo = \"Enter valid phone number\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.phoneNo = \"Phone number should be a number\";\n        } else if (value.length > 10) {\n          formErrors.phoneNo = \"Phone number should be 10 digit\";\n        } else {\n          formErrors.phoneNo = \"\";\n        }\n\n        break;\n      case \"address\":\n        formErrors.address =\n          value.trim() !== \"\" && value.length > 0 ? \"\" : \"please enter address\";\n        break;\n      case \"pincode\":\n        if (value.length < 6 && value.length > 0) {\n          formErrors.pincode = \"Min 6 character required\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.pincode = \"Pincode should be a number\";\n        } else if (value.length > 6 && value.length > 0) {\n          formErrors.pincode = \"Max 6 character allowed\";\n        } else {\n          formErrors.pincode = \"\";\n        }\n\n        break;\n      case \"cname\":\n        if (value.length > 0 && !nameRegx.test(value.trim())) {\n          formErrors.cname = \"Please enter valid name\";\n        } else if (value.length < 3 && value.length > 0) {\n          formErrors.cname = \"Min 3 character required\";\n        } else {\n          formErrors.cname = \"\";\n        }\n        break;\n      case \"cphone\":\n        if (value.length < 10 && value.length > 0) {\n          formErrors.cphone = \"Enter valid phone number\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.cphone = \"Phone number should be a number\";\n        } else if (value.length > 10) {\n          formErrors.cphone = \"Phone number should be 10 digit\";\n        } else {\n          formErrors.cphone = \"\";\n        }\n\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => {\n      //console.log(this.state);\n    });\n  };\n  onvisitorButtonClickHandler = e => {\n    let {\n      email,\n      username,\n      phoneNo,\n      address,\n      pincode,\n      role,\n      cname,\n      cphone,\n      formError\n    } = this.state;\n    if (email === null) {\n      formError.email = \"Email field required\";\n    }\n    if (username === null) {\n      formError.username = \"Username field required\";\n    }\n    if (phoneNo === null) {\n      formError.phoneNo = \"Phone no field required\";\n    }\n    if (address === null) {\n      formError.address = \"Address field required\";\n    }\n    if (pincode === null) {\n      formError.pincode = \"Pincode field required\";\n    }\n    if (cname === null) {\n      formError.cname = \"contractore name field required\";\n    }\n    if (cphone === null) {\n      formError.cphone = \"contractore phone field required\";\n    }\n    if (role === \"select\") {\n      formError.role = \"Role is required\";\n    }\n    console.log(\"error----\", formError);\n    this.setState({ formError: formError });\n  };\n  selectChangeHandle = value => {\n    let formErrors = this.state.formError;\n    let name = \"role\";\n    switch (name) {\n      case \"role\":\n        formErrors.role =\n          value.trim() === \"select\" ? \"please select role \" : \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value }, () => {});\n  };\n  addvisitorSubmitHandler = e => {\n    e.preventDefault();\n    console.log(\"state----\", this.state);\n    if (formValid1(this.state)) {\n      const userData = {\n        username: validator.escape(this.state.username),\n        email: validator.escape(this.state.email),\n        phoneNo: validator.escape(this.state.phoneNo),\n        address: validator.escape(this.state.address),\n        pincode: validator.escape(this.state.pincode),\n        role: validator.escape(this.state.role),\n        cname: validator.escape(this.state.cname),\n        cphone: validator.escape(this.state.cphone)\n      };\n      axios\n        .post(\"/visitor\", { userData })\n        .then(response => {\n          if (response.data.success) {\n            console.log(response.data);\n            // message.info(response.data.message);\n          } else {\n            console.log(response.data);\n            //message.error(response.data.message);\n          }\n        })\n        .catch(error => {\n          message.error(error);\n        });\n    }\n  };\n\n  render() {\n    if (!this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n    let { formError } = this.state;\n    return (\n      <Row>\n        <Col span={24}>\n          <Layout>\n            <NavigationComponent />\n            <Content style={{ backgroundColor: \"#FFF\", paddingBottom: \"5%\" }}>\n              <Row>\n                <Col\n                  xs={{ span: 18, offset: 3 }}\n                  sm={{ span: 12, offset: 7 }}\n                  md={{ span: 10, offset: 7 }}\n                  className=\"card\"\n                >\n                  <form\n                    className=\"form\"\n                    onSubmit={this.addvisitorSubmitHandler}\n                  >\n                    <h3 className=\"h3\">Add New Site Executive </h3>\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={\n                        formError.username.length > 0 ? \"error\" : \"\"\n                      }\n                      help={formError.username}\n                    >\n                      <Input\n                        required\n                        placeholder=\"Full name\"\n                        name=\"username\"\n                        prefix={\n                          <Icon\n                            type=\"user\"\n                            style={{ color: \"rgba(0,0,0,.25)\" }}\n                          />\n                        }\n                        onChange={event => this.onInputChange(event)}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={formError.email.length > 0 ? \"error\" : \"\"}\n                      help={formError.email}\n                    >\n                      <Input\n                        placeholder=\"email\"\n                        name=\"email\"\n                        prefix={\n                          <Icon\n                            type=\"ie\"\n                            style={{ color: \"rgba(0,0,0,.25)\" }}\n                          />\n                        }\n                        onChange={event => this.onInputChange(event)}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={\n                        formError.phoneNo.length > 0 ? \"error\" : \"\"\n                      }\n                      help={formError.phoneNo}\n                    >\n                      <Input\n                        placeholder=\"Phone number\"\n                        name=\"phoneNo\"\n                        prefix={\n                          <Icon\n                            type=\"phone\"\n                            style={{ color: \"rgba(0,0,0,.25)\" }}\n                          />\n                        }\n                        onChange={event => this.onInputChange(event)}\n                      />\n                    </Form.Item>\n\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={\n                        formError.address.length > 0 ? \"error\" : \"\"\n                      }\n                      help={formError.address}\n                    >\n                      <Input.TextArea\n                        placeholder=\"Address\"\n                        name=\"address\"\n                        onChange={event => this.onInputChange(event)}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={\n                        formError.pincode.length > 0 ? \"error\" : \"\"\n                      }\n                      help={formError.pincode}\n                    >\n                      <Input\n                        placeholder=\"Pincode\"\n                        name=\"pincode\"\n                        prefix={\n                          <FontAwesomeIcon\n                            icon={faMapPin}\n                            style={{ color: \"rgba(0,0,0,.25)\" }}\n                          />\n                        }\n                        onChange={event => this.onInputChange(event)}\n                      />\n                    </Form.Item>\n\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={formError.role.length > 0 ? \"error\" : \"\"}\n                      help={formError.role}\n                    >\n                      <Select\n                        defaultValue=\"select\"\n                        style={{ width: \"100%\" }}\n                        onChange={this.selectChangeHandle}\n                        showArrow={true}\n                      >\n                        <Option key=\"select\" value=\"select\" disabled>\n                          Select Type of Site\n                        </Option>\n                        <Option key=\"own\" value=\"own\">\n                          Own\n                        </Option>\n                        <Option key=\"rent\" value=\"rent\">\n                          Rent\n                        </Option>\n                      </Select>\n                    </Form.Item>\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={formError.cname.length > 0 ? \"error\" : \"\"}\n                      help={formError.cname}\n                    >\n                      <Input\n                        placeholder=\"Contractor /Engineer name\"\n                        name=\"cname\"\n                        prefix={\n                          <Icon\n                            type=\"user\"\n                            style={{ color: \"rgba(0,0,0,.25)\" }}\n                          />\n                        }\n                        onChange={event => this.onInputChange(event)}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={\n                        formError.cphone.length > 0 ? \"error\" : \"\"\n                      }\n                      help={formError.cphone}\n                    >\n                      <Input\n                        placeholder=\"Contractor /Engineer name\"\n                        name=\"cphone\"\n                        prefix={\n                          <Icon\n                            type=\"phone\"\n                            style={{ color: \"rgba(0,0,0,.25)\" }}\n                          />\n                        }\n                        onChange={event => this.onInputChange(event)}\n                      />\n                    </Form.Item>\n                    <Form.Item className=\"formElement\">\n                      <Button\n                        onClick={this.onvisitorButtonClickHandler}\n                        htmlType=\"submit\"\n                        block\n                        style={{\n                          backgroundColor: \"#45526e\",\n                          color: \"#FFF\",\n                          fontSize: \"18px\"\n                        }}\n                      >\n                        Add Visitors\n                        <Icon type=\"user-add\" style={{ marginLeft: \"3%\" }} />\n                      </Button>\n                    </Form.Item>\n                  </form>\n                </Col>\n              </Row>\n            </Content>\n            <Row>\n              <Col>\n                <FooterComponent />\n              </Col>\n            </Row>\n          </Layout>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    isError: state.auth.error,\n    isLoading: state.auth.loading,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: userData => dispatch(action.loginAction(userData)),\n    onSetAuthRedirectPath: () =>\n      dispatch(action.setAuthRedirectPath(\"/dashboard\"))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(dashboardComponent);\n","import React, { Component } from \"react\";\nimport {\n  Layout,\n  Row,\n  Col,\n  Icon,\n  Menu,\n  Input,\n  Select,\n  Checkbox,\n  Table,\n  Divider,\n  Tag,\n  Pagination,\n  Button\n} from \"antd\";\nimport * as action from \"../../stores/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport NavigationComponent from \"../navigationComponent/navigationComponent\";\nimport \"./reportComponent.css\";\nimport axios from \"../../axiosInterceptor\";\nimport { saveAs } from \"file-saver\";\n\nconst { Content } = Layout;\nconst columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"fullname\",\n    key: \"fullname\"\n    //  render: text => <a>{text}</a>\n  },\n  {\n    title: \"Email\",\n    dataIndex: \"email\",\n    key: \"age\"\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\"\n  },\n  {\n    title: \"Phone\",\n    dataIndex: \"phoneNo\",\n    key: \"phoneNo\"\n  },\n  {\n    title: \"Type of place\",\n    dataIndex: \"typeOfPlace\",\n    key: \"typeOfPlace\"\n  },\n  {\n    title: \"ContractorName\",\n    dataIndex: \"contractorName\",\n    key: \"contractorName\"\n  },\n  {\n    title: \"ContractorPhoneNo\",\n    dataIndex: \"contractorPhoneNo\",\n    key: \"contractorPhoneNo\"\n  },\n  {\n    title: \"Latitude\",\n    dataIndex: \"latitude\",\n    key: \"latitude\"\n  },\n  {\n    title: \"longitude\",\n    dataIndex: \"longitude\",\n    key: \"longitude\"\n  },\n  {\n    title: \"City\",\n    dataIndex: \"city\",\n    key: \"city\"\n  }\n  // {\n  //   title: \"Action\",\n  //   key: \"action\",\n  //   render: (text, record) => (\n  //     <span>\n  //       <Button type=\"link\">Delete</Button>\n  //     </span>\n  //   )\n  // }\n];\n\nclass reportComponent extends Component {\n  _isMounted = false;\n  state = {\n    selectedRows: [],\n    tableData: []\n  };\n  componentDidMount() {\n    this._isMounted = true;\n    axios\n      .get(\"/visitorData\")\n      .then(res => {\n        if (res.data.success) {\n          this.setState({ tableData: res.data.data });\n        }\n      })\n      .catch(error => {\n        console.log(\"er--\", error);\n      });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  onExportReport = () => {\n    axios\n      .get(\"/exportData\", { responseType: \"blob\" })\n      .then(res => {\n        saveAs(res.data, \"MbiotechVisitors.xlsx\");\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n  render() {\n    if (!this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n    // const rowSelection = {\n    //   onChange: (selectedRowKeys, selectedRows) => {\n    //     this.setState({ selectedRows: selectedRows }, () => {\n    //       console.log(this.state.selectedRows);\n    //     });\n    //   }\n    // };\n    return (\n      <Row>\n        <Col span={24}>\n          <Layout>\n            <NavigationComponent />\n            <Content style={{ backgroundColor: \"#FFF\" }}>\n              <Row>\n                <Col\n                  xs={{ span: 18, offset: 3 }}\n                  sm={{ span: 12, offset: 3 }}\n                  md={{ span: 22, offset: 1 }}\n                >\n                  <Button\n                    type=\"primary\"\n                    ghost\n                    htmlType=\"button\"\n                    style={{ marginTop: \"3%\" }}\n                    onClick={this.onExportReport}\n                  >\n                    Export\n                  </Button>\n\n                  <div style={{ marginTop: \"2%\" }}>\n                    <Table\n                      rowKey={record => record.email}\n                      columns={columns}\n                      dataSource={this.state.tableData}\n                      pagination\n                      bordered\n                    />\n                  </div>\n                </Col>\n              </Row>\n            </Content>\n          </Layout>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token != null\n  };\n};\n\nexport default connect(mapStateToProps)(reportComponent);\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport {\n  Layout,\n  Row,\n  Col,\n  Input,\n  Button,\n  Icon,\n  Form,\n  Select,\n  message\n} from \"antd\";\nimport \"./adduserComponent.css\";\nimport validator from \"validator\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport * as action from \"../../stores/actions/index\";\nimport NavigationComponent from \"../navigationComponent/navigationComponent\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAddressBook, faMapPin } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"../../axiosInterceptor\";\n\nconst { Option } = Select;\nconst { Header, Content } = Layout;\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\nconst emailRegx = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\nconst passwordReg = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\nconst nameRegx = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/g;\nclass adduserComponent extends Component {\n  state = {\n    username: null,\n    email: null,\n    password: null,\n    phoneNo: null,\n    address: null,\n    pincode: null,\n    role: \"select\",\n    formError: {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      phoneNo: \"\",\n      address: \"\",\n      pincode: \"\",\n      role: \"\"\n    }\n  };\n\n  onInputChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = this.state.formError;\n\n    switch (name) {\n      case \"username\":\n        if (value.length > 0 && !nameRegx.test(value.trim())) {\n          formErrors.username = \"Please enter valid username\";\n        } else if (value.length < 3 && value.length > 0) {\n          formErrors.username = \"Min 3 character required\";\n        } else {\n          formErrors.username = \"\";\n        }\n        break;\n      case \"email\":\n        formErrors.email =\n          emailRegx.test(value) && value.length > 0 ? \"\" : \"Enter valid email\";\n        break;\n      case \"password\":\n        if (!passwordReg.test(value) && value.length > 0) {\n          formErrors.password =\n            \"Password should contains atleast 1 lowercase ,1 uppercase,1 numeric ,1 special character and length must be 8\";\n        } else {\n          formErrors.password = \"\";\n        }\n\n        break;\n      case \"phoneNo\":\n        if (value.length < 10 && value.length > 0) {\n          formErrors.phoneNo = \"Enter valid phone number\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.phoneNo = \"Phone number should be a number\";\n        } else if (value.length > 10) {\n          formErrors.phoneNo = \"Phone number should be 10 digit\";\n        } else {\n          formErrors.phoneNo = \"\";\n        }\n\n        break;\n      case \"address\":\n        formErrors.address =\n          value.trim() !== \"\" && value.length > 0 ? \"\" : \"please enter address\";\n        break;\n      case \"pincode\":\n        if (value.length < 6 && value.length > 0) {\n          formErrors.pincode = \"Min 6 character required\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.pincode = \"Pincode should be a number\";\n        } else if (value.length > 6 && value.length > 0) {\n          formErrors.pincode = \"Max 6 character allowed\";\n        } else {\n          formErrors.pincode = \"\";\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => {\n      //console.log(this.state);\n    });\n  };\n\n  onButtonClickHandler = e => {\n    let {\n      email,\n      password,\n      username,\n      phoneNo,\n      address,\n      pincode,\n      role,\n      formError\n    } = this.state;\n    if (email === null) {\n      formError.email = \"Email field required\";\n    }\n    if (password === null) {\n      formError.password = \"Password field required\";\n    }\n    if (username === null) {\n      formError.username = \"Username field required\";\n    }\n    if (phoneNo === null) {\n      formError.phoneNo = \"Phone no field required\";\n    }\n    if (address === null) {\n      formError.address = \"Address field required\";\n    }\n    if (pincode === null) {\n      formError.pincode = \"Pincode field required\";\n    }\n    if (role === \"select\") {\n      formError.role = \"Role is required\";\n    }\n    this.setState({ formError });\n  };\n  selectChangeHandle = value => {\n    let formErrors = this.state.formError;\n    let name = \"role\";\n    switch (name) {\n      case \"role\":\n        formErrors.role =\n          value.trim() === \"select\" ? \"please select role \" : \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value }, () => {});\n  };\n  adduserSubmitHandler = e => {\n    e.preventDefault();\n    if (formValid(this.state)) {\n      const userData = {\n        username: validator.escape(this.state.username),\n        email: validator.escape(this.state.email),\n        password: validator.escape(this.state.password),\n        phoneNo: validator.escape(this.state.phoneNo),\n        address: validator.escape(this.state.address),\n        pincode: validator.escape(this.state.pincode),\n        role: validator.escape(this.state.role)\n      };\n      axios\n        .post(\"/signup\", { userData })\n        .then(response => {\n          if (response.data.success) {\n            message.info(response.data.message);\n          } else {\n            message.error(response.data.message);\n          }\n        })\n        .catch(error => {\n          message.error(error);\n        });\n    }\n  };\n  render() {\n    if (!this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n    let { formError } = this.state;\n    return (\n      <Row>\n        <Col span={24}>\n          <Layout>\n            <NavigationComponent />\n            <Content style={{ backgroundColor: \"#FFF\" }}>\n              <Row>\n                <Col\n                  xs={{ span: 18, offset: 3 }}\n                  sm={{ span: 12, offset: 7 }}\n                  md={{ span: 10, offset: 7 }}\n                  className=\"card\"\n                >\n                  <form className=\"form\" onSubmit={this.adduserSubmitHandler}>\n                    <h3 className=\"h3\">Add New Site Executive </h3>\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={\n                        formError.username.length > 0 ? \"error\" : \"\"\n                      }\n                      help={formError.username}\n                    >\n                      <Input\n                        placeholder=\"Full name\"\n                        name=\"username\"\n                        prefix={\n                          <Icon\n                            type=\"user\"\n                            style={{ color: \"rgba(0,0,0,.25)\" }}\n                          />\n                        }\n                        onChange={event => this.onInputChange(event)}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={formError.email.length > 0 ? \"error\" : \"\"}\n                      help={formError.email}\n                    >\n                      <Input\n                        placeholder=\"email\"\n                        name=\"email\"\n                        prefix={\n                          <Icon\n                            type=\"ie\"\n                            style={{ color: \"rgba(0,0,0,.25)\" }}\n                          />\n                        }\n                        onChange={event => this.onInputChange(event)}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={\n                        formError.password.length > 0 ? \"error\" : \"\"\n                      }\n                      help={formError.password}\n                    >\n                      <Input\n                        required\n                        placeholder=\"password\"\n                        name=\"password\"\n                        prefix={\n                          <Icon\n                            type=\"lock\"\n                            style={{ color: \"rgba(0,0,0,.25)\" }}\n                          />\n                        }\n                        onChange={event => this.onInputChange(event)}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={\n                        formError.phoneNo.length > 0 ? \"error\" : \"\"\n                      }\n                      help={formError.phoneNo}\n                    >\n                      <Input\n                        placeholder=\"Phone number\"\n                        name=\"phoneNo\"\n                        prefix={\n                          <Icon\n                            type=\"phone\"\n                            style={{ color: \"rgba(0,0,0,.25)\" }}\n                          />\n                        }\n                        onChange={event => this.onInputChange(event)}\n                      />\n                    </Form.Item>\n\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={\n                        formError.address.length > 0 ? \"error\" : \"\"\n                      }\n                      help={formError.address}\n                    >\n                      <Input.TextArea\n                        placeholder=\"Address\"\n                        name=\"address\"\n                        onChange={event => this.onInputChange(event)}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={\n                        formError.pincode.length > 0 ? \"error\" : \"\"\n                      }\n                      help={formError.pincode}\n                    >\n                      <Input\n                        placeholder=\"Pincode\"\n                        name=\"pincode\"\n                        prefix={\n                          <FontAwesomeIcon\n                            icon={faMapPin}\n                            style={{ color: \"rgba(0,0,0,.25)\" }}\n                          />\n                        }\n                        onChange={event => this.onInputChange(event)}\n                      />\n                    </Form.Item>\n\n                    <Form.Item\n                      className=\"formElement\"\n                      hasFeedback\n                      validateStatus={formError.role.length > 0 ? \"error\" : \"\"}\n                      help={formError.role}\n                    >\n                      <Select\n                        defaultValue=\"select\"\n                        style={{ width: \"100%\" }}\n                        onChange={this.selectChangeHandle}\n                        showArrow={true}\n                      >\n                        <Option key=\"select\" value=\"select\" disabled>\n                          Select Role\n                        </Option>\n                        <Option key=\"admin\" value=\"admin\">\n                          Admin\n                        </Option>\n                        <Option key=\"executive\" value=\"executive\">\n                          Executive\n                        </Option>\n                      </Select>\n                    </Form.Item>\n                    <Form.Item className=\"formElement\">\n                      <Button\n                        onClick={this.onButtonClickHandler}\n                        htmlType=\"submit\"\n                        block\n                        style={{\n                          backgroundColor: \"#45526e\",\n                          color: \"#FFF\",\n                          fontSize: \"18px\"\n                        }}\n                      >\n                        Add User\n                        <Icon type=\"user-add\" style={{ marginLeft: \"3%\" }} />\n                      </Button>\n                    </Form.Item>\n                  </form>\n                </Col>\n              </Row>\n            </Content>\n          </Layout>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    isError: state.auth.error,\n    isLoading: state.auth.loading,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: userData => dispatch(action.loginAction(userData)),\n    onSetAuthRedirectPath: () =>\n      dispatch(action.setAuthRedirectPath(\"/adduser\"))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(adduserComponent);\n","import React, { Component } from \"react\";\nimport Aux from \"./hoc/Aux\";\nimport loginComponent from \"./components/loginComponent/loginComponent\";\nimport dashboardComponent from \"./components/dashboardComponent/dashboardComponent\";\nimport { withRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./stores/actions/index\";\nimport reportComponent from \"./components/reportComponent/reportComponent\";\nimport adduserComponent from \"./components/adduserComponent/adduserComponent\";\n\nclass App extends Component {\n  _isMounted = false;\n  componentDidMount() {\n    this._isMounted = true;\n    this.props.onTryAutoSignUp();\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/\" exact component={loginComponent} />\n        <Route path=\"/dashboard\" component={dashboardComponent} />\n        <Route path=\"/adduser\" component={adduserComponent} />\n        <Route path=\"/report\" component={reportComponent} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null //state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, newObject) => {\n  return {\n    ...oldObject,\n    ...newObject\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../updateObject\";\nconst initialState = {\n  token: null,\n  username: null,\n  error: null,\n  loading: false,\n  role: null,\n  authRedirectPath: \"/\"\n};\n\nconst loginRequest = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\nconst loginSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: false,\n    token: action.token,\n    role: action.role,\n    username: action.username\n  });\n};\n\nconst loginFailure = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst logout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    username: null,\n    role: null,\n    authRedirectPath: \"/\"\n  });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, { authRedirectPath: action.path });\n};\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.LOGIN_REQUEST:\n      return loginRequest(state, action);\n    case actionTypes.LOGIN_SUCCESS:\n      return loginSuccess(state, action);\n    case actionTypes.LOGIN_FAILURE:\n      return loginFailure(state, action);\n    case actionTypes.LOGOUT:\n      return logout(state, action);\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n    default:\n      return state;\n  }\n};\nexport default loginReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport loginReducer from \"./stores/reducers/loginReducer\";\n\nconst rootReducer = combineReducers({\n  auth: loginReducer\n});\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}